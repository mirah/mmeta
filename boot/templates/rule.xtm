
def {{RULE}}{{ARGS}}{{#CAST}}:{{CAST}}{{/CAST}}
  {{#DEBUG}}
  _enter('{{RULE}}'){{/DEBUG}}{{#SCOPE_VARS}}
  __saved_{{SIMPLE_NAME}} = {{NAME}}{{/SCOPE_VARS}}
  begin
    _start = _pos{{#LOCALS}}; {{LOCAL}} = nil{{/LOCALS}}{{#DEBUG}}
    _e = ({{/DEBUG}}{{#MEMO}}
    _t = _{{#NO_RECURSION}}s{{/NO_RECURSION}}retrieve("{{MEMO_KEY}}")
    return {{#CAST}}{{CAST}}({{/CAST}}{{#DEBUG}}_exit({{/DEBUG}}_t{{#DEBUG}}){{/DEBUG}}{{#CAST}}){{/CAST}} unless _t == BaseParser.NOT_MEMOIZED{{/MEMO}}
    {{>RULE_BODY}}{{#DEBUG}}
    )
    _exit(_e)
    _e{{/DEBUG}}
  rescue RuleFailure => ex
    ex.last = '{{RULE}}'{{#DEBUG}}
    _exit(ex){{/DEBUG}}
    raise ex{{#SCOPE}}
  ensure{{#SCOPE_VARS}}
    {{NAME}} = __saved_{{SIMPLE_NAME}}{{/SCOPE_VARS}}{{/SCOPE}}
  end
end
